import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset = pd.read_csv('50_Startups.csv')
x = dataset.iloc[:,:-1].values
y = dataset.iloc[:,-1].values

from sklearn.preprocessing import LabelEncoder, OneHotEncoder
labelencoder_x = LabelEncoder()
x[:,3] = labelencoder_x.fit_transform(x[:,3])
onehotencoder_x = OneHotEncoder(categorical_features = [3])
x = onehotencoder_x.fit_transform(x).toarray()

#Avoiding the Dummy variable trap
x = x[:,1:]


from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)

#Fitting the Linear Regression  Model
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(x_train, y_train)

#Predicting the test set results
y_pred = regressor.predict(x_test)

#Building the Optimal Model using Backward Elimination
import statsmodels.formula.api as sm
x = np.append(arr = np.ones((len(x),1)).astype(int), values = x , axis = 1)
x_opt = x[:,[0,1,2,3,4,5]]
regressor_OLS = sm.OLS(endog = y, exog = x_opt).fit()
regressor_OLS.summary()
x_opt = x[:,[0,1,3,4,5]]
regressor_OLS = sm.OLS(endog= y, exog= x_opt).fit()
regressor_OLS.summary()
x_opt = x[:,[0,3,4,5]]
regressor_OLS = sm.OLS(endog = y, exog= x_opt).fit()
regressor_OLS.summary()
x_opt = x[:,[0,3,5]]
regressor_OLS = sm.OLS(endog = y, exog= x_opt).fit()
regressor_OLS.summary()
x_opt = x[:,[0,3]]
regressor_OLS = sm.OLS(endog= y, exog= x_opt).fit()
regressor_OLS.summary()
